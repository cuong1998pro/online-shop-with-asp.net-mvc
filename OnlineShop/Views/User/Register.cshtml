@using BotDetect.Web.Mvc;
@model OnlineShop.Models.RegisterModel

@{
    ViewBag.Title = "Đăng ký";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@{
    MvcCaptcha registerCaptcha = new MvcCaptcha("ExampleCaptcha");
    registerCaptcha.UserInputID = "CaptchaCode";
}

@section header{

    <link href="@BotDetect.Web.CaptchaUrls.Absolute.LayoutStyleSheetUrl"
          rel="stylesheet" type="text/css" />
}

<div class="content">
    <h2>Đăng ký</h2>
    <!-- Alert-->
    @if (TempData["AlertMessage"] != null)
    {

        <div class="row">
            <div class="col-md-12">
                <div class="alert  @TempData["AlertType"] ">
                    @TempData["AlertMessage"]
                </div>
            </div>
        </div>

    }
    @using (Html.BeginForm("Register", "User", FormMethod.Post))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.PasswordFor(model => model.Password, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Confirm, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.PasswordFor(model => model.Confirm, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Confirm, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ProvinceID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("ProvinceID", new SelectList(new string[] { }), new { @class = "form-control", @id = "ddlProvince" })
                    @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DistrictID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("DistrictID", new SelectList(new string[] { }), new { @class = "form-control", @id = "ddlDistrict" })
                    @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CaptchaCode, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.Captcha(registerCaptcha)
                    @Html.TextBox("CaptchaCode")
                    @Html.ValidationMessageFor(model => model.CaptchaCode, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Đăng ký" class="btn btn-default" />
                </div>
            </div>
        </div>
    }
</div>

<script>
    var user = {
        init: function () {
            user.loadProvince();
            $('#ddlProvince').off('change').change(function () {
                var id = $('#ddlProvince option:selected').attr('id');
                if (id != '') {
                    user.loadDistrict(parseInt(id));
                }
                else {
                    $('#ddlDistrict').html('');
                }
            });
        },
        loadProvince: function () {
            $.ajax({
                url: '/user/loadProvince',
                type: 'post',
                dataType: 'json',
                success: function (res) {
                    if (res.status) {
                        var html = "<option>-- Chọn tỉnh, thành phố --</option>";
                        var data = res.data;
                        $.each(data, function (i, item) {
                            html += '<option id="' + item.ID + '">' + item.Name + '</option>';
                        });
                        $('#ddlProvince').html(html);
                    }
                }
            })
        },

        loadDistrict: function (id) {
            $.ajax({
                url: '/user/loadDistrict',
                type: 'post',
                data: { ProvinceID: id },
                dataType: 'json',
                success: function (res) {
                    if (res.status) {
                        var html = "<option>-- Chọn quận huyện --</option>";
                        var data = res.data;
                        $.each(data, function (i, item) {
                            html += '<option id="' + item.ID + '">' + item.Name + '</option>';
                        });
                        $('#ddlDistrict').html(html);
                    }
                }
            })
        }
    }
    user.init();
</script>