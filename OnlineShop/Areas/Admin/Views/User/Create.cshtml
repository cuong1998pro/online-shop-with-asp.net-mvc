@model Model.EntityFramework.User

@{
    ViewBag.Title = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

@section header{
    Thêm người dùng
}

<div class="row">
    <div class="col-12">
        <div class="card-box">
            <h4 class="header-title">Thêm người dùng mới</h4>

            <br />
            <div class="row">
                <div class="col-12">
                    <div>
                        @using (Html.BeginForm("Create", "User", FormMethod.Post))
                        {
                            <div class="form-horizontal">

                                @Html.AntiForgeryToken()

                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                                <div class="form-group row">
                                    @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "col-form-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group row">
                                    @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "col-form-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.PasswordFor(model => model.Password, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group row">
                                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "col-form-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group row">
                                    @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "col-form-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group row">
                                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "col-form-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group row">
                                    @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "col-form-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group row">
                                    <label class="col-md-2 col-form-label" for="example-email">Trạng thái</label>
                                    <div class="col-md-10">
                                        <div class="checkbox checkbox-primary">
                                            <input type="checkbox" name="Status" id="status" value="true" />
                                            <label for="status"></label>
                                        </div>
                                    </div>
                                </div>

                                <div class="row">
                                    <div class=" col-md-10 offset-md-2">
                                        <input type="submit" value="Tạo mới" class="btn btn-success waves-effect waves-light mr-1" />
                                        @Html.ActionLink("Xem danh sách", "Index", "User", new { @class = "btn btn-secondary waves-effect" })
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
            <!-- end row -->
        </div> <!-- end card-box -->
    </div><!-- end col -->
</div>

@*<div class="row">
        <div class="col-md-12">
            <div class="card-box">
                <h4 class="header-title mb-3">Thêm người dùng</h4>

                @using (Html.BeginForm("Create", "User", FormMethod.Post))
                {
                    <div class="form-horizontal">

                        @Html.AntiForgeryToken()

                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <div class="form-group row">
                            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "col-form-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group row">
                            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "col-form-label col-md-2" })
                            <div class="col-md-10">
                                @Html.PasswordFor(model => model.Password, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group row">
                            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "col-form-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group row">
                            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "col-form-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group row">
                            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "col-form-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group row">
                            @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "col-form-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group row">
                            <div class="col-md-10">
                                <label>
                                    Trạng thái
                                </label>
                                <div class="checkbox checkbox-primary">
                                    <input type="checkbox" name="Status" id="status" value="true" />
                                    <label for="status"></label>
                                </div>
                            </div>
                        </div>

                        <div class="form-group row">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Tạo mới" class="btn btn-purple waves-effect waves-light" />
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>*@